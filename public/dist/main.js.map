{"version":3,"sources":["./src/app/about/about-routing.module.ts","./src/app/@core/route-reusable-strategy.ts","./src/app/i18n/i18n.service.ts","./src/app/shell/shell.component.ts","./src/app/shell/shell.component.html","./src/app/auth/auth-routing.module.ts","./src/app/auth/authentication.service.ts","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/auth/login.component.ts","./src/app/auth/login.component.html","./src/app/auth/credentials.service.ts","./src/app/@shared/index.ts","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/home/home-routing.module.ts","./src/environments/environment.ts","./src/app/about/about.module.ts","./src/app/home/quote.service.ts","./src/app/shell/shell.service.ts","./src/app/i18n/index.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/@core/index.ts","./src/app/@core/http/api-prefix.interceptor.ts","./src/app/@core/core.module.ts","./src/app/shell/header/header.component.ts","./src/app/shell/header/header.component.html","./src/app/auth/auth.module.ts","./src/app/app.module.ts","./src/app/shell/shell.module.ts","./src/app/home/home.module.ts","./src/app/auth/index.ts","./src/app/@core/logger.service.ts","./src/app/i18n/language-selector.component.ts","./src/app/i18n/language-selector.component.html","./src/app/auth/authentication.guard.ts","./src/app/i18n/i18n.module.ts","./src/app/@shared/loader/loader.component.ts","./src/app/@shared/loader/loader.component.html","./src/app/@shared/shared.module.ts","./src/app/app-routing.module.ts","./src/app/@core/http/error-handler.interceptor.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { Shell } from '@app/shell/shell.service';\nimport { AboutComponent } from './about.component';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: 'about', component: AboutComponent, data: { title: marker('About') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AboutRoutingModule { }\n","import { ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy } from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n/**\n * A route strategy allowing for explicit route reuse.\n * Used as a workaround for https://github.com/angular/angular/issues/18374\n * To reuse a given route, add `data: { reuse: true }` to the route definition.\n */\n@Injectable()\nexport class RouteReusableStrategy extends RouteReuseStrategy {\n\n  public shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public store(route: ActivatedRouteSnapshot, detachedTree: DetachedRouteHandle | null): void { }\n\n  public shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    return false;\n  }\n\n  public retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle | null {\n    return null;\n  }\n\n  public shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // Reuse the route if the RouteConfig is the same, or if both routes use the\n    // same component, because the latter can have different RouteConfigs.\n    return future.routeConfig === curr.routeConfig ||\n      Boolean(future.routeConfig?.component &&\n      future.routeConfig?.component === curr.routeConfig?.component);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { TranslateService, LangChangeEvent } from '@ngx-translate/core';\nimport { Subscription } from 'rxjs';\n\nimport { Logger } from '@core/logger.service';\nimport enUS from '../../translations/en-US.json';\nimport frFR from '../../translations/fr-FR.json';\n\nconst log = new Logger('I18nService');\nconst languageKey = 'language';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class I18nService {\n\n  defaultLanguage!: string;\n  supportedLanguages!: string[];\n\n  private langChangeSubscription!: Subscription;\n\n  constructor(private translateService: TranslateService) {\n    // Embed languages to avoid extra HTTP requests\n    translateService.setTranslation('en-US', enUS);\n    translateService.setTranslation('fr-FR', frFR);\n  }\n\n  /**\n   * Initializes i18n for the application.\n   * Loads language from local storage if present, or sets default language.\n   * @param defaultLanguage The default language to use.\n   * @param supportedLanguages The list of supported languages.\n   */\n  init(defaultLanguage: string, supportedLanguages: string[]) {\n    this.defaultLanguage = defaultLanguage;\n    this.supportedLanguages = supportedLanguages;\n    this.language = '';\n\n    // Warning: this subscription will always be alive for the app's lifetime\n    this.langChangeSubscription = this.translateService.onLangChange\n      .subscribe((event: LangChangeEvent) => { localStorage.setItem(languageKey, event.lang); });\n  }\n\n  /**\n   * Cleans up language change subscription.\n   */\n  destroy() {\n    if (this.langChangeSubscription) {\n      this.langChangeSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * Sets the current language.\n   * Note: The current language is saved to the local storage.\n   * If no parameter is specified, the language is loaded from local storage (if present).\n   * @param language The IETF language code to set.\n   */\n  set language(language: string) {\n    language = language || localStorage.getItem(languageKey) || this.translateService.getBrowserCultureLang();\n    let isSupportedLanguage = this.supportedLanguages.includes(language);\n\n    // If no exact match is found, search without the region\n    if (language && !isSupportedLanguage) {\n      language = language.split('-')[0];\n      language = this.supportedLanguages.find(supportedLanguage => supportedLanguage.startsWith(language)) || '';\n      isSupportedLanguage = Boolean(language);\n    }\n\n    // Fallback if language is not supported\n    if (!isSupportedLanguage) {\n      language = this.defaultLanguage;\n    }\n\n    log.debug(`Language set to ${language}`);\n    this.translateService.use(language);\n  }\n\n  /**\n   * Gets the current language.\n   * @return The current language code.\n   */\n  get language(): string {\n    return this.translateService.currentLang;\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shell',\n  templateUrl: './shell.component.html',\n  styleUrls: ['./shell.component.scss']\n})\nexport class ShellComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","<app-header></app-header>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n  { path: 'login', component: LoginComponent, data: { title: marker('Login') } }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AuthRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { Credentials, CredentialsService } from './credentials.service';\n\nexport interface LoginContext {\n  username: string;\n  password: string;\n  remember?: boolean;\n}\n\n/**\n * Provides a base for authentication workflow.\n * The login/logout methods should be replaced with proper implementation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(private credentialsService: CredentialsService) { }\n\n  /**\n   * Authenticates the user.\n   * @param context The login parameters.\n   * @return The user credentials.\n   */\n  login(context: LoginContext): Observable<Credentials> {\n    // Replace by proper authentication call\n    const data = {\n      username: context.username,\n      token: '123456'\n    };\n    this.credentialsService.setCredentials(data, context.remember);\n    return of(data);\n  }\n\n  /**\n   * Logs out the user and clear credentials.\n   * @return True if the user was logged out successfully.\n   */\n  logout(): Observable<boolean> {\n    // Customize credentials invalidation here\n    this.credentialsService.setCredentials();\n    return of(true);\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { environment } from '@env/environment';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  version: string | null = environment.version;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"jumbotron text-center\">\n    <h1>\n      <span translate>APP_NAME</span>\n    </h1>\n    <p>\n      <i class=\"far fa-bookmark\"></i> <span translate>Version</span> {{version}}\n    </p>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { finalize } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, UntilDestroy, untilDestroyed } from '@core';\nimport { AuthenticationService } from './authentication.service';\n\nconst log = new Logger('Login');\n\n@UntilDestroy()\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  version: string | null = environment.version;\n  error: string | undefined;\n  loginForm!: FormGroup;\n  isLoading = false;\n\n  constructor(private router: Router,\n              private route: ActivatedRoute,\n              private formBuilder: FormBuilder,\n              private authenticationService: AuthenticationService) {\n    this.createForm();\n  }\n\n  ngOnInit() { }\n\n  login() {\n    this.isLoading = true;\n    const login$ = this.authenticationService.login(this.loginForm.value);\n    login$.pipe(\n      finalize(() => {\n        this.loginForm.markAsPristine();\n        this.isLoading = false;\n      }),\n      untilDestroyed(this)\n    ).subscribe(credentials => {\n      log.debug(`${credentials.username} successfully logged in`);\n      this.router.navigate([ this.route.snapshot.queryParams.redirect || '/'], { replaceUrl: true });\n    }, error => {\n      log.debug(`Login error: ${error}`);\n      this.error = error;\n    });\n  }\n\n\n  private createForm() {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      remember: true\n    });\n  }\n\n}\n","<div class=\"login-container bg-light\">\n  <div class=\"login-box\">\n    <h1 translate>APP_NAME</h1>\n    <div>\n      <h6 class=\"d-inline-block\">v{{version}}</h6>\n      <div class=\"d-inline-block ml-3\">\n        <app-language-selector></app-language-selector>\n      </div>\n    </div>\n    <div class=\"container\">\n      <div class=\"card col-md-6 mt-3 mx-auto\">\n        <div class=\"card-body\">\n          <h4 class=\"card-title text-center\">\n            <i class=\"far fa-3x fa-user-circle text-muted\"></i>\n          </h4>\n          <form (ngSubmit)=\"login()\" [formGroup]=\"loginForm\" novalidate>\n            <div class=\"alert alert-danger\" [hidden]=\"!error || isLoading\" translate>\n              Username or password incorrect.\n            </div>\n            <div class=\"form-group\">\n              <label class=\"d-block\">\n                <input type=\"text\" class=\"form-control\" formControlName=\"username\" autocomplete=\"username\"\n                       [placeholder]=\"'Username' | translate\"/>\n                <span hidden translate>Username</span>\n                <small [hidden]=\"loginForm.controls.username.valid || loginForm.controls.username.untouched\"\n                       class=\"text-danger\" translate>\n                  Username is required\n                </small>\n              </label>\n              <label class=\"d-block\">\n                <input type=\"password\" class=\"form-control\" formControlName=\"password\" autocomplete=\"current-password\"\n                       [placeholder]=\"'Password' | translate\" required/>\n                <span hidden translate>Password</span>\n                <small [hidden]=\"loginForm.controls.password.valid || loginForm.controls.password.untouched\"\n                       class=\"text-danger\" translate>\n                  Password is required\n                </small>\n              </label>\n              <div class=\"form-check\">\n                <label class=\"form-check-label\">\n                  <input type=\"checkbox\" class=\"form-check-input\" formControlName=\"remember\"/>\n                  <span translate>Remember me</span>\n                </label>\n              </div>\n            </div>\n            <button class=\"btn btn-primary w-100\" type=\"submit\" [disabled]=\"loginForm.invalid || isLoading\">\n              <i class=\"fas fa-cog fa-spin\" [hidden]=\"!isLoading\"></i>\n              <span translate>Login</span>\n            </button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\n\nexport interface Credentials {\n  // Customize received credentials here\n  username: string;\n  token: string;\n}\n\nconst credentialsKey = 'credentials';\n\n/**\n * Provides storage for authentication credentials.\n * The Credentials interface should be replaced with proper implementation.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CredentialsService {\n\n  private _credentials: Credentials | null = null;\n\n  constructor() {\n    const savedCredentials = sessionStorage.getItem(credentialsKey) || localStorage.getItem(credentialsKey);\n    if (savedCredentials) {\n      this._credentials = JSON.parse(savedCredentials);\n    }\n  }\n\n  /**\n   * Checks is the user is authenticated.\n   * @return True if the user is authenticated.\n   */\n  isAuthenticated(): boolean {\n    return !!this.credentials;\n  }\n\n  /**\n   * Gets the user credentials.\n   * @return The user credentials or null if the user is not authenticated.\n   */\n  get credentials(): Credentials | null {\n    return this._credentials;\n  }\n\n  /**\n   * Sets the user credentials.\n   * The credentials may be persisted across sessions by setting the `remember` parameter to true.\n   * Otherwise, the credentials are only persisted for the current session.\n   * @param credentials The user credentials.\n   * @param remember True to remember credentials across sessions.\n   */\n  setCredentials(credentials?: Credentials, remember?: boolean) {\n    this._credentials = credentials || null;\n\n    if (credentials) {\n      const storage = remember ? localStorage : sessionStorage;\n      storage.setItem(credentialsKey, JSON.stringify(credentials));\n    } else {\n      sessionStorage.removeItem(credentialsKey);\n      localStorage.removeItem(credentialsKey);\n    }\n  }\n\n}\n","export * from './shared.module';\nexport * from './loader/loader.component';\n","import { Component, OnInit } from '@angular/core';\nimport { finalize } from 'rxjs/operators';\n\nimport { QuoteService } from './quote.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  quote: string | undefined;\n  isLoading = false;\n\n  constructor(private quoteService: QuoteService) { }\n\n  ngOnInit() {\n    this.isLoading = true;\n    this.quoteService.getRandomQuote({ category: 'dev' })\n      .pipe(finalize(() => { this.isLoading = false; }))\n      .subscribe((quote: string) => { this.quote = quote; });\n  }\n\n}\n","<div class=\"container-fluid\">\n  <div class=\"jumbotron text-center\">\n    <h1>\n      <img class=\"logo\" src=\"assets/ngx-rocket-logo.png\" alt=\"angular logo\"/>\n      <span translate>Hello world !</span>\n    </h1>\n    <app-loader [isLoading]=\"isLoading\"></app-loader>\n    <q [hidden]=\"isLoading\">{{quote}}</q>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { marker } from '@biesbjerg/ngx-translate-extract-marker';\n\nimport { HomeComponent } from './home.component';\nimport { Shell } from '@app/shell/shell.service';\n\nconst routes: Routes = [\n  Shell.childRoutes([\n    { path: '', redirectTo: '/home', pathMatch: 'full' },\n    { path: 'home', component: HomeComponent, data: { title: marker('Home') } }\n  ])\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class HomeRoutingModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\n// `.env.ts` is generated by the `npm run env` command\n// `npm run env` exposes environment variables as JSON for any usage you might\n// want, like displaying the version or getting extra config from your CI bot, etc.\n// This is useful for granularity you might need beyond just the environment.\n// Note that as usual, any environment variables you expose through it will end up in your\n// bundle, and you should not use it for any sensitive information like passwords or keys.\n//import { env } from '.env';\n\nexport const environment = {\n  production: false,\n  version: '-dev',\n  serverUrl: '/api',\n  defaultLanguage: 'en-US',\n  supportedLanguages: ['en-US', 'fr-FR']\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { AboutRoutingModule } from './about-routing.module';\nimport { AboutComponent } from './about.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    AboutRoutingModule\n  ],\n  declarations: [\n    AboutComponent\n  ]\n})\nexport class AboutModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError } from 'rxjs/operators';\n\nconst routes = {\n  quote: (c: RandomQuoteContext) => `/jokes/random?category=${c.category}`\n};\n\nexport interface RandomQuoteContext {\n  // The quote's category: 'dev', 'explicit'...\n  category: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class QuoteService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getRandomQuote(context: RandomQuoteContext): Observable<string> {\n    return this.httpClient\n      .get(routes.quote(context))\n      .pipe(\n        map((body: any) => body.value),\n        catchError(() => of('Error, could not load joke :-('))\n      );\n  }\n\n}\n","import { Routes, Route } from '@angular/router';\n\nimport { AuthenticationGuard } from '@app/auth';\nimport { ShellComponent } from './shell.component';\n\n/**\n * Provides helper methods to create routes.\n */\nexport class Shell {\n\n  /**\n   * Creates routes using the shell component and authentication.\n   * @param routes The routes to add.\n   * @return The new route using shell as the base.\n   */\n  static childRoutes(routes: Routes): Route {\n    return {\n      path: '',\n      component: ShellComponent,\n      children: routes,\n      canActivate: [AuthenticationGuard]\n    };\n  }\n}\n","export * from './i18n.module';\nexport * from './i18n.service';\nexport * from './language-selector.component';\n","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Router, NavigationEnd, ActivatedRoute } from '@angular/router';\nimport { Title } from '@angular/platform-browser';\nimport { TranslateService } from '@ngx-translate/core';\nimport { merge } from 'rxjs';\nimport { filter, map, switchMap } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger, UntilDestroy, untilDestroyed } from '@core';\nimport { I18nService } from '@app/i18n';\n\nconst log = new Logger('App');\n\n@UntilDestroy()\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n\n  constructor(private router: Router,\n              private activatedRoute: ActivatedRoute,\n              private titleService: Title,\n              private translateService: TranslateService,\n              private i18nService: I18nService) { }\n\n  ngOnInit() {\n    // Setup logger\n    if (environment.production) {\n      Logger.enableProductionMode();\n    }\n\n    log.debug('init');\n\n\n    // Setup translations\n    this.i18nService.init(environment.defaultLanguage, environment.supportedLanguages);\n\n    const onNavigationEnd = this.router.events.pipe(filter(event => event instanceof NavigationEnd));\n\n    // Change page title on navigation or language change, based on route data\n    merge(this.translateService.onLangChange, onNavigationEnd)\n      .pipe(\n        map(() => {\n          let route = this.activatedRoute;\n          while (route.firstChild) {\n            route = route.firstChild;\n          }\n          return route;\n        }),\n        filter(route => route.outlet === 'primary'),\n        switchMap(route => route.data),\n        untilDestroyed(this)\n      )\n      .subscribe(event => {\n        const title = event.title;\n        if (title) {\n          this.titleService.setTitle(this.translateService.instant(title));\n        }\n      });\n  }\n\n  ngOnDestroy() {\n    this.i18nService.destroy();\n  }\n\n}\n","<router-outlet></router-outlet>\n","export * from './core.module';\nexport * from './http/api-prefix.interceptor';\nexport * from './http/error-handler.interceptor';\nexport * from './route-reusable-strategy';\nexport * from './logger.service';\nexport * from '@ngneat/until-destroy';;\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@env/environment';\n\n/**\n * Prefixes all requests not starting with `http[s]` with `environment.serverUrl`.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiPrefixInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    if (!/^(http|https):/i.test(request.url)) {\n      request = request.clone({ url: environment.serverUrl + request.url });\n    }\n    return next.handle(request);\n  }\n}\n","import { NgModule, Optional, SkipSelf } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HTTP_INTERCEPTORS, HttpClientModule } from '@angular/common/http';\nimport { RouteReuseStrategy, RouterModule } from '@angular/router';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { RouteReusableStrategy } from './route-reusable-strategy';\nimport { ApiPrefixInterceptor } from './http/api-prefix.interceptor';\nimport { ErrorHandlerInterceptor } from './http/error-handler.interceptor';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    TranslateModule,\n    RouterModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiPrefixInterceptor,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ErrorHandlerInterceptor,\n      multi: true\n    },\n    {\n      provide: RouteReuseStrategy,\n      useClass: RouteReusableStrategy\n    }\n  ]\n})\nexport class CoreModule {\n\n  constructor(@Optional() @SkipSelf() parentModule: CoreModule) {\n    // Import guard\n    if (parentModule) {\n      throw new Error(`${parentModule} has already been loaded. Import Core module in the AppModule only.`);\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { AuthenticationService, CredentialsService } from '@app/auth';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  menuHidden = true;\n\n  constructor(private router: Router,\n              private authenticationService: AuthenticationService,\n              private credentialsService: CredentialsService) { }\n\n  ngOnInit() { }\n\n  toggleMenu() {\n    this.menuHidden = !this.menuHidden;\n  }\n\n  logout() {\n    this.authenticationService.logout()\n      .subscribe(() => this.router.navigate(['/login'], { replaceUrl: true }));\n  }\n\n  get username(): string | null {\n    const credentials = this.credentialsService.credentials;\n    return credentials ? credentials.username : null;\n  }\n\n}\n","<header>\n  <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n    <a class=\"navbar-brand\" href=\"https://github.com/ngx-rocket\" translate>APP_NAME</a>\n    <button class=\"navbar-toggler\" type=\"button\" aria-controls=\"navbar-menu\"\n            aria-label=\"Toggle navigation\" (click)=\"toggleMenu()\" [attr.aria-expanded]=\"!menuHidden\">\n      <span class=\"navbar-toggler-icon\"></span>\n    </button>\n    <div id=\"navbar-menu\" class=\"collapse navbar-collapse float-xs-none\" [ngbCollapse]=\"menuHidden\">\n      <div class=\"navbar-nav\">\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/home\" routerLinkActive=\"active\">\n          <i class=\"fas fa-home\"></i>\n          <span translate>Home</span>\n        </a>\n        <a class=\"nav-item nav-link text-uppercase\" routerLink=\"/about\" routerLinkActive=\"active\">\n          <i class=\"fas fa-question-circle\"></i>\n          <span translate>About</span>\n        </a>\n      </div>\n      <div class=\"navbar-nav ml-auto\">\n        <app-language-selector inNavbar=\"true\" menuClass=\"dropdown-menu dropdown-menu-right\"></app-language-selector>\n        <div class=\"nav-item\" ngbDropdown>\n          <a id=\"user-dropdown\" class=\"nav-link\" ngbDropdownToggle>\n            <i class=\"fas fa-user-circle\"></i>\n          </a>\n          <div ngbDropdownMenu aria-labelledby=\"user-dropdown\" class=\"dropdown-menu dropdown-menu-right\">\n            <h6 class=\"dropdown-header\">\n              <span translate>Logged in as</span> <b>{{username}}</b></h6>\n            <div class=\"dropdown-divider\"></div>\n            <button class=\"dropdown-item\" (click)=\"logout()\" translate>Logout</button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </nav>\n</header>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { AuthRoutingModule } from './auth-routing.module';\nimport { LoginComponent } from './login.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    TranslateModule,\n    NgbModule,\n    I18nModule,\n    AuthRoutingModule\n  ],\n  declarations: [\n    LoginComponent\n  ]\n})\nexport class AuthModule { }\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { environment } from '@env/environment';\nimport { CoreModule } from '@core';\nimport { SharedModule } from '@shared';\nimport { AuthModule } from '@app/auth';\nimport { HomeModule } from './home/home.module';\nimport { ShellModule } from './shell/shell.module';\nimport { AboutModule } from './about/about.module';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    ServiceWorkerModule.register('./ngsw-worker.js', { enabled: environment.production }),\n    FormsModule,\n    HttpClientModule,\n    TranslateModule.forRoot(),\n    NgbModule,\n    CoreModule,\n    SharedModule,\n    ShellModule,\n    HomeModule,\n    AboutModule,\n    AuthModule,\n    AppRoutingModule // must be imported as the last module as it contains the fallback route\n  ],\n  declarations: [AppComponent],\n  providers: [\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { RouterModule } from '@angular/router';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { I18nModule } from '@app/i18n';\nimport { AuthModule } from '@app/auth';\nimport { ShellComponent } from './shell.component';\nimport { HeaderComponent } from './header/header.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    NgbModule,\n    AuthModule,\n    I18nModule,\n    RouterModule\n  ],\n  declarations: [\n    HeaderComponent,\n    ShellComponent\n  ]\n})\nexport class ShellModule {\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\n\nimport { SharedModule } from '@shared';\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    SharedModule,\n    HomeRoutingModule\n  ],\n  declarations: [\n    HomeComponent\n  ]\n})\nexport class HomeModule { }\n","export * from './auth.module';\nexport * from './authentication.service';\nexport * from './credentials.service';\nexport * from './authentication.guard';\n","/**\n * Simple logger system with the possibility of registering custom outputs.\n *\n * 4 different log levels are provided, with corresponding methods:\n * - debug   : for debug information\n * - info    : for informative status of the application (success, ...)\n * - warning : for non-critical errors that do not prevent normal application behavior\n * - error   : for critical errors that prevent normal application behavior\n *\n * Example usage:\n * ```\n * import { Logger } from 'app/core/logger.service';\n *\n * const log = new Logger('myFile');\n * ...\n * log.debug('something happened');\n * ```\n *\n * To disable debug and info logs in production, add this snippet to your root component:\n * ```\n * export class AppComponent implements OnInit {\n *   ngOnInit() {\n *     if (environment.production) {\n *       Logger.enableProductionMode();\n *     }\n *     ...\n *   }\n * }\n *\n * If you want to process logs through other outputs than console, you can add LogOutput functions to Logger.outputs.\n */\n\n/**\n * The possible log levels.\n * LogLevel.Off is never emitted and only used with Logger.level property to disable logs.\n */\nexport enum LogLevel {\n  Off = 0,\n  Error,\n  Warning,\n  Info,\n  Debug\n}\n\n/**\n * Log output handler function.\n */\nexport type LogOutput = (source: string | undefined, level: LogLevel, ...objects: any[]) => void;\n\nexport class Logger {\n\n  /**\n   * Current logging level.\n   * Set it to LogLevel.Off to disable logs completely.\n   */\n  static level = LogLevel.Debug;\n\n  /**\n   * Additional log outputs.\n   */\n  static outputs: LogOutput[] = [];\n\n  /**\n   * Enables production mode.\n   * Sets logging level to LogLevel.Warning.\n   */\n  static enableProductionMode() {\n    Logger.level = LogLevel.Warning;\n  }\n\n  constructor(private source?: string) { }\n\n  /**\n   * Logs messages or objects  with the debug level.\n   * Works the same as console.log().\n   */\n  debug(...objects: any[]) {\n    this.log(console.log, LogLevel.Debug, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the info level.\n   * Works the same as console.log().\n   */\n  info(...objects: any[]) {\n    this.log(console.info, LogLevel.Info, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the warning level.\n   * Works the same as console.log().\n   */\n  warn(...objects: any[]) {\n    this.log(console.warn, LogLevel.Warning, objects);\n  }\n\n  /**\n   * Logs messages or objects  with the error level.\n   * Works the same as console.log().\n   */\n  error(...objects: any[]) {\n    this.log(console.error, LogLevel.Error, objects);\n  }\n\n  private log(func: (...args: any[]) => void, level: LogLevel, objects: any[]) {\n    if (level <= Logger.level) {\n      const log = this.source ? ['[' + this.source + ']'].concat(objects) : objects;\n      func.apply(console, log);\n      Logger.outputs.forEach(output => output.apply(output, [this.source, level, ...objects]));\n    }\n  }\n\n}\n","import { Component, OnInit, Input } from '@angular/core';\n\nimport { I18nService } from './i18n.service';\n\n@Component({\n  selector: 'app-language-selector',\n  templateUrl: './language-selector.component.html',\n  styleUrls: ['./language-selector.component.scss']\n})\nexport class LanguageSelectorComponent implements OnInit {\n  @Input() inNavbar = false;\n  @Input() menuClass = '';\n\n  constructor(\n    private i18nService: I18nService\n  ) { }\n\n  ngOnInit() { }\n\n  setLanguage(language: string) {\n    this.i18nService.language = language;\n  }\n\n  get currentLanguage(): string {\n    return this.i18nService.language;\n  }\n\n  get languages(): string[] {\n    return this.i18nService.supportedLanguages;\n  }\n\n}\n\n","<div [ngClass]=\"{ 'nav-item': inNavbar }\" ngbDropdown>\n  <a *ngIf=\"inNavbar; else button\" id=\"language-dropdown\" class=\"nav-link\" ngbDropdownToggle>\n    {{currentLanguage | translate}}\n  </a>\n  <ng-template #button>\n    <button id=\"language-dropdown\" class=\"btn btn-sm btn-secondary\" ngbDropdownToggle>\n      {{currentLanguage}}\n    </button>\n  </ng-template>\n  <div ngbDropdownMenu aria-labelledby=\"language-dropdown\" [ngClass]=\"menuClass\">\n    <button class=\"dropdown-item\" *ngFor=\"let language of languages\" (click)=\"setLanguage(language)\">\n      {{language | translate}}\n    </button>\n  </div>\n</div>\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\nimport { Logger } from '@core';\nimport { CredentialsService } from './credentials.service';\n\nconst log = new Logger('AuthenticationGuard');\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationGuard implements CanActivate {\n\n  constructor(private router: Router,\n              private credentialsService: CredentialsService) { }\n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    if (this.credentialsService.isAuthenticated()) {\n      return true;\n    }\n\n    log.debug('Not authenticated, redirecting and adding redirect url...');\n    this.router.navigate(['/login'], { queryParams: { redirect: state.url }, replaceUrl: true });\n    return false;\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { LanguageSelectorComponent } from './language-selector.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    TranslateModule,\n    NgbModule,\n  ],\n  declarations: [\n    LanguageSelectorComponent,\n  ],\n  exports: [\n    LanguageSelectorComponent,\n  ]\n})\nexport class I18nModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n\n  @Input() isLoading = false;\n  @Input() message: string | undefined;\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n","<div [hidden]=\"!isLoading\" class=\"text-xs-center\">\n  <i class=\"fas fa-cog fa-spin fa-3x\"></i> <span>{{message}}</span>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoaderComponent } from './loader/loader.component';\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    LoaderComponent\n  ],\n  exports: [\n    LoaderComponent\n  ]\n})\nexport class SharedModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  // Fallback when no prior route is matched\n  { path: '**', redirectTo: '', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n  providers: []\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nimport { environment } from '@env/environment';\nimport { Logger } from '../logger.service';\n\nconst log = new Logger('ErrorHandlerInterceptor');\n\n/**\n * Adds a default error handler to all requests.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ErrorHandlerInterceptor implements HttpInterceptor {\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));\n  }\n\n  // Customize the default error handler here if needed\n  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {\n    if (!environment.production) {\n      // Do something with the error\n      log.error('Request error', response);\n    }\n    throw response;\n  }\n\n}\n","/*\n * Entry point of the application.\n * Only platform bootstrapping code should be here.\n * For app-specific initialization, use `app/app.component.ts`.\n */\n\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from '@app/app.module';\nimport { environment } from '@env/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}